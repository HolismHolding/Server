. /HolismHolding/Server/Message.sh

CurrentDir=$PWD

echo
if [ ! -f /$CurrentDir/Params ]; then
    Error "Params file is not found in the /$CurrentDir directory"
    exit;  
fi
set -a
source /$CurrentDir/Params
set +a

function GenerateAccountsDockerCompose()
{
    envsubst < /HolismHolding/Server/DockerCompose/Accounts > /$Organization/$Repository/docker-compose-temp.yml
}

function GenerateSiteAndBlogAndPanelDockerCompose()
{
    envsubst < /HolismHolding/Server/DockerCompose/SiteAndBlogAndPanel > /$Organization/$Repository/docker-compose-temp.yml
}

function GenerateDatabasesDockerCompose()
{
    envsubst < /HolismHolding/Server/DockerCompose/Databases > /$Organization/$Repository/docker-compose-temp.yml
}

function GenerateApiDockerCompose()
{
    envsubst < /HolismHolding/Server/DockerCompose/Api > /$Organization/$Repository/docker-compose-temp.yml
}

function SetPort()
{
    envsubst < /$Organization/$Repository/docker-compose-temp.yml > /$Organization/$Repository/docker-compose.yml
    rm /$Organization/$Repository/docker-compose-temp.yml
}

function CalculateSubdomain()
{
    if [ $Repository == *"Api" ]; then
        Subdomain=`echo $Organization | sed 's/Api//g'`
    elif [ $Repository == *"Panel" ]; then
        Subdomain=`echo $Repository | sed 's/Panel//g'`
    elif [ $Repository == "Blog"]; then
        Subdomain=Blog
    fi
    if [ Subdomain != "" ]; then
        export Subdomain=$(echo $Subdomain | tr '[:upper:]' '[:lower:]').
    fi
    Info "Subdomain is $Subdomain"
}

function GenerateNiginxConfig()
{
    envsubst < /HolismHolding/Server/Nginx/$1 > /$Organization/$Repository/$Subdomain$Domain.conf.temp
    envsubst < /$Organization/$Repository/$Subdomain$Domain.conf.temp > /$Organization/$Repository/$Subdomain$Domain.conf
    rm /$Organization/$Repository/$Subdomain$Domain.conf.temp
}

for i in $(find . -mindepth 1 -maxdepth 1 -type d -printf '%f\n'); do
    cd $CurrentDir/$i
    . /HolismHolding/Server/Extract
    if [[ $i == "Site" ]]; then
        GenerateSiteAndBlogAndPanelDockerCompose
        GenerateNiginxConfig SiteAndApiAndBlogAndPanel
    elif [[ $i == "Blog" ]]; then
        CalculateSubdomain
        GenerateSiteAndBlogAndPanelDockerCompose
        GenerateNiginxConfig SiteAndApiAndBlogAndPanel
    elif [[ $i == "Accounts" ]]; then
        GenerateAccountsDockerCompose
        GenerateNiginxConfig Accounts
    elif [[ $i == *"Panel" ]]; then
        CalculateSubdomain
        GenerateSiteAndBlogAndPanelDockerCompose
        GenerateNiginxConfig SiteAndApiAndBlogAndPanel
    elif [[ $i == *"Api" ]]; then
        CalculateSubdomain
        GenerateApiDockerCompose
        GenerateNiginxConfig SiteAndApiAndBlogAndPanel
    elif [[ $i == "Databases" ]]; then
        GenerateDatabasesDockerCompose
    else
        Error "$i is unknown"
        exit;
    fi
    SetPort
    Success "/$Organization/$Repository"
    # Divide
done